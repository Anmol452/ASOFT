let c = document.getElementById("text")

let cars = ["BMW", "HONDA", "LANDROVER"]
let b = [1,3,5,6,7,9]

// 1) Remove (pop) the last element:
// cars.pop()
// c.innerHTML= cars;

// 2) Add a new item to an array(push()):
// cars.push("TATA")
// c.innerHTML= cars;

//3)join item 
// let b1= b.join("_")
// c.innerHTML= b1;
// c.innerHTML= cars;
// console.log(b.join("+"))

// 4) splice method
// cars.splice(i,R,add,add)
// let c1 = cars.splice(1, 1, "TATA","bugati")
// c.innerHTML=cars


// 5) Shift (remove) the first element of the array:
// cars.shift()
// c.innerHTML=cars

// 6) add new item for frist
// cars.unshift("THAR")
// c.innerHTML=cars

//7) delete item
// let a =delete cars[1]
// c.innerHTML=cars

//9) 2 Array ko jodna 
// let a = cars.concat(b)
// c.innerHTML=a

//10) number ko stringe ma change karana
// console.log(typeof(b))
// let a = b.toString()
// c.innerHTML = a
// console.log(typeof(a))

//11) elebat word set
let c1 = ["v","c","d","f","e","r","t","g"]
// let a = c1.sort()
// c.innerHTML = a

//12) slice() -> slices out a piece form on array It Creats a New Array
// let a = b.slice(1,3)
// text1.innerHTML = b
// c.innerHTML = a

//13) Create an Array Iterator object, containing the keys of the array:
//    let key = c1.keys()
//    let a = "";
//    for(let x of key){
//        a += x + "<br>"
//    }
//    c.innerHTML = a
 
//14) JavaScript Array flatMap()
// let a = b.flatMap((x)=> x*31)
//    c.innerHTML = a

 //15) Find the first element with a value over 18:
    // let ages = [66,7,34,18,6]
    // ages.findIndex(chakage)

    // function chakage(age){
    //     return age > 18
    // }

    // c.innerHTML = chakage(9)

//________$$$$$%_______Map() 2 Examples__________^_&_&%_$_&+_+_______________
//15) (i)Return a new array with the square root of all element values:
let num = [2,6,9,25,16,32]
// let newarr = num.map(Math.sqrt)
// c.innerHTML = newarr

// (ii) Multiply all the values in an array with 10:
let newarr =  num.map(mymap)

function mymap(x){
    return x*10
}
c.innerHTML = newarr
